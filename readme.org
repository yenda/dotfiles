sudo apt-get install --yes pass editorconfig git stow rofi rlwrap libtool-bin i3 silversearcher-ag cmake libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 libbz2-1.0:i386 libgtk2.0-dev libc6-dev  libncurses5-dev libpng-dev libtiff5-dev xaw3dg-dev zlib1g-dev libice-dev libsm-dev libx11-dev libxext-dev libxi-dev libxmu-dev libxmuu-dev libxpm-dev libxrandr-dev libxt-dev libxtst-dev libxv-dev libjpeg-dev libjpeg8-dev libjpeg-turbo8-dev libgif-dev libgnutls28-dev libu2f-udev

sudo apt-get install qemu qemu-kvm libvirt-daemon bridge-utils virt-manager virtinst ia32-libs-multiarch 

sudo apt-get install xclip libgtk2.0-dev

* install dotfiles

```
rm .bashrc .bash_logout
cd dotfiles
./install.sh
```

* generate ssh key and add ssh key to github in chromium
generate-ssh-key github

Add font source-code-pro

[ -d /usr/share/fonts/opentype ] || sudo mkdir /usr/share/fonts/opentype
sudo git clone --depth 1 --branch release https://github.com/adobe-fonts/source-code-pro.git /usr/share/fonts/opentype/scp
sudo fc-cache -f -v

* Build and install emacs

https://github.com/sogaiu/tree-sitter-clojure
https://www.masteringemacs.org/article/how-to-get-started-tree-sitter

#+BEGIN_SRC sh
  git clone git@github.com:tree-sitter/tree-sitter.git
  cd tree-sitter
  make
  sudo make install
#+END_SRC

Get the code from the gnu [[http://ftp.gnu.org/gnu/emacs/][forge]]

#+BEGIN_SRC sh
  tar -xfv emacs-*
  ./autogen.sh    # not needed when installing from tarball
  cd emacs-*
  sudo apt-get install libgccjit-12-dev imagemagick libmagickwand-dev libwebkit2gtk-4.1-dev libjansson-dev
  CFLAGS='-march=native -O3' ./configure \
	--with-modules \
	--with-xwidgets \
	--with-mailutils \
	--with-imagemagick \
	--with-native-compilation=aot \
	--with-json \
	--with-tree-sitter
  make
  sudo make install
#+END_SRC


# --with-pgtk \ only if I use wayland one day

* Install docker

#+BEGIN_SRC sh
sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

export LSB_ETC_LSB_RELEASE=/etc/upstream-release/lsb-release

V=$(lsb_release -cs)

sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"

sudo apt-get update -y

sudo apt-get install -y docker-ce

## Add user to docker group. Added user can run docker command without sudo command
sudo gpasswd -a "${USER}" docker
;;sudo usermod -a -G docker $USER

sudo curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

sudo chmod +x /usr/local/bin/docker-compose

docker --version
docker-compose --version
#+END_SRC

** test

#+BEGIN_SRC sh
docker run hello-world
#+END_SRC


* Install clojure

#+BEGIN_SRC sh
	curl -sLO https://raw.githubusercontent.com/clj-kondo/clj-kondo/master/script/install-clj-kondo
	chmod +x install-clj-kondo
	./install-clj-kondo

	$ bash < <(curl -s https://raw.githubusercontent.com/babashka/babashka/master/install)

#+END_SRC

* Install android studio

link
https://developer.android.com/studio

install
https://developer.android.com/studio/install

sudo adduser $USER kvm

yenda@project2501:~$ tar xvf android-studio-ide-201.6953283-linux.tar.gz -C /opt/
yenda@project2501:~$ sudo chmod o+w /opt/android-studio/
yenda@project2501:~$ sudo mkdir /opt/android-sdk
yenda@project2501:~$ sudo chmod o+w /opt/android-sdk/
yenda@project2501:~$ sudo rm -rf /opt/android-sdk/
yenda@project2501:~$ /opt/android-studio/bin/studio.sh 

* Install expressvpn
https://www.expressvpn.com/subscriptions

* Install watchman

#+BEGIN_SRC sh
git clone https://github.com/facebook/watchman.git
cd watchman
git checkout v4.9.0  # the latest stable release
./autogen.sh
./configure
make
sudo make install

echo 999999 | sudo tee -a /proc/sys/fs/inotify/max_user_watches && echo 999999 | sudo tee -a /proc/sys/fs/inotify/max_queued_events && echo 999999 | sudo tee -a /proc/sys/fs/inotify/max_user_instances && watchman shutdown-server && sudo sysctl -p
#+END_SRC

* Install nodejs

https://github.com/nodesource/distributions/blob/master/README.md

** Using Ubuntu

#+BEGIN_SRC sh
curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
sudo apt-get install -y nodejs
sudo apt-get install gcc g++ make
curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
sudo apt-get update && sudo apt-get install yarn

yenda@project2501:~/clash$ sudo npm i -g npm-completion
yenda@project2501:~/clash$ sudo npm-completion-setup 
#+END_SRC

* Streamdeck

  I installed the deb package from https://github.com/muesli/deckmaster and followed the readme
  

  I cloned the repo https://github.com/muesli/deckmaster-emojis
  I had to install the Roboto font 
  sudo apt-get install fonts-roboto

  I tried `deckmaster -deck deckmaster-emojis/main.deck`

  and got no Stream Deck devices found


  I installed golang and the built the deckmaster command because the package didn't seem to recognize the streamdeck

  I noticed in systemctl that there was an issue creating the uinput file so I ran

  `sudo chmod 666 /dev/uinput`

  using the main deck from deckmaster-emojis seemed to work

* Keyboard


#+BEGIN_SRC sh
  echo options hid_apple fnmode=2 | sudo tee -a /etc/modprobe.d/hid_apple.conf
  sudo update-initramfs -u -k all
  sudo reboot # optional
#+END_SRC

* Getting rid of that wierd input issue

#+BEGIN_SRC sh
gsettings set org.freedesktop.ibus.panel.emoji hotkey "@as []"
#+END_SRC
